<?xml version="1.0" encoding="US-ASCII"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC7908 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7908.xml">
<!ENTITY RFC8092 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8092.xml">
<!ENTITY I-D.ietf-idr-bgp-open-policy SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-idr-bgp-open-policy.xml">
<!--
<!ENTITY I-D.ietf-idr-aspath-orf SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-idr-aspath-orf.xml">

<!ENTITY I-D.ietf-idr-route-leak-detection-mitigation SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-idr-route-leak-detection-mitigation.xml">

<!ENTITY I-D.draft-sriram-idr-route-leak-solution-discussion SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-sriram-idr-route-leak-solution-discussion.xml">
-->
]>


<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="std" docName="draft-ietf-grow-route-leak-detection-mitigation-02" ipr="trust200902">
  <front>
    <title abbrev="Route Leak Detection and Mitigation"> Methods for Detection and Mitigation of BGP Route Leaks </title>

    <author fullname="Kotikalapudi Sriram" initials="K." role="editor" surname="Sriram">
      <organization abbrev="USA NIST">USA National Institute of Standards and Technology</organization>
      <address>
         <postal>
          <street>100 Bureau Drive</street>
          <city>Gaithersburg</city>
          <region>MD</region>
          <code>20899</code>
          <country>United States of America</country>
        </postal>
        <email>ksriram@nist.gov</email>
      </address>
    </author>

    <author fullname="Alexander Azimov" initials="A." role="editor" surname="Azimov">
      <organization abbrev="Yandex">Yandex</organization>
      <address>
         <postal>
          <street>Ulitsa Lva Tolstogo 16</street>
          <city>Moscow</city>
          <code>119021</code>
          <country>Russia</country>
        </postal>
        <email>a.e.azimov@gmail.com</email>
      </address>
    </author>

    <date year="2019" />

    <area>Routing</area>

    <workgroup>IDR and SIDR</workgroup>

    <keyword>BGP, Route Leak Detection, Route-Leak Mitigation, BGP Security</keyword>

    <abstract>
      <t>
        Problem definition for route leaks and enumeration of types of route leaks are provided in <xref target="RFC7908"/>.
        This document describes a new well known large community that gives a way for both route leak prevention and detection.
        The configuration process for these community can be automated with BGP roles that are defined in ietf-idr-bgp-open-policy draft.
      </t>
    </abstract>

  </front>

  <middle>
    <section title="Introduction">
      <t>
        <xref target="RFC7908"/> provides a definition of the route leak problem and enumerates several types of route leaks.
        For this document, the definition that is applied is that a route leak occurs when a route received from a transit provider or a lateral peer is forwarded (against commonly used policy) to another transit provider or a lateral peer.
        The commonly used policy is that a route received from a transit provider or a lateral peer MAY be forwarded only to customers.
      </t>
      <t>
        This document describes a solution for prevention, detection and mitigation route leaks which is based on conveying route-leak detection information in a well known large community.
        Its configuration policies MUST be defined according to peering relations between ISPs.
        If BGP Roles described in <xref target="I-D.ietf-idr-bgp-open-policy"></xref> are configured, community configuration SHOULD be implemented in code of the routing software.
      </t>
      <t>
        Described technique can be incrementally deployed.
        If a group of big ISPs or/and IXes deploy proposed route marking, then they would be helping each other by blocking route leaks that can happen between them.
      </t>
    </section>

    <section anchor="relations" title="Peering Relationships">
      <t>
        As described in <xref target="I-D.ietf-idr-bgp-open-policy"></xref> there are several common peering relations between eBGP sessions:
        <list style="symbols">
          <t>Provider - sender is a transit provider to neighbor;</t>
          <t>Customer - sender is customer of neighbor;</t>
          <t>RS - sender is route server at internet exchange point (IX)</t>
          <t>RS-client - sender is client of RS at internet exchange point (IX)</t>
          <t>Peer - sender and neighbor are peers;</t>
        </list>
      </t>
      <t>
        If a route is received from provider, peer or RS-client is MUST follow 'only down' rule - it MAY be advertised only to customers.
        If a route is sent to customer, peer or RS-client it also MUST follow 'only down' rule.
      </t>
      <t>
        The common technique to implement internal 'only down' rule is to use BGP communities, but these communities differ from network to network and can be removed at the receipt.
        So, we need a standardized transit signal that will prevent networks from leaking and tell a remote ISP that receiving prefix violates 'only down' policy, thus providing a way to stop the propagation of leaked prefixes.
      </t>
      <t>
        To improve reliability such signal should be set on both sender and receiver side.
      </t>
    </section>

    <section anchor="community" title="Community vs Attribute">
      <t>
        In this section will be discussed the advantages and disadvantages of communities and BGP path attributes for the purpose of route leak detection.
      </t>

      <t>
        The transit path attribute seems to be a native way to implement route leak detection signal.
        The way BGP process unknown transit attributes guarantees that such a signal will pass through outdated BGP implementations without any change.
        The main disadvantage lays on a fact that deployment of new BGP attribute requires a software update which may postpone wide adoption for years.
      </t>

      <t>
        In opposite, communities don't require a software update.
        The main disadvantage of communities is that its usage is highly overloaded.
        They already have numerous applications: different types of route marking, route policy control, blackholing and etc.
        That's why a significant number of networks with purpose or accidentally are removing communities on receipt, even well-known ones.
      </t>

      <t>
        With the knowledge that route leaks can disrupt Internet connectivity in the region or even globally the authors believe that it's better to move forward with route leak detection using communities.
        The harm that is done by route leaks isn't a theory - it's constantly happening events.
      </t>

      <t>
        To nevilate listed disadvantages of community usage, we suggest using large communities, which have much higher capacity, so it should be less overloaded.
        We suggest reserving 4200000000 class for the purpose of transit well-known communities that MUST not be stripped on both ingress and egress filters.
        Also, policy violation is itself result of absent or improper community configuration.
        So, the chance that route-leak-detection community will pass through ISP that already has configuration mistakes is increased.
      </t>

      <t>
        While it's not part of this document the described below signal can be easily translated into BGP path attribute.
      </t>
    </section>

    <section anchor="detection" title="Down Only Community">
      <t>
        This section specifies exact semantics of route-leak-detection community and its usage.
        The Down Only (DO) community MUST follow next semantics:
        <figure align="center" anchor="fig2" title="Format of the DO Community using a Large Community [RFC8092].">
          <artwork align="left"><![CDATA[

 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         4200000000 (suggested global administrator)           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            1 (suggested subclass for DO)                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                ASN who set the community                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

]]>
          </artwork>
        </figure>
      </t>
      <t>
        This community MUST have route policy configuration on both egress and ingress filters.
      </t>

      <t>
        The ingress policy MUST follow next procedure:
        <list style="numbers">
          <t>If a route with DO community set is received from Customer or RS-client - it's a route leak and MUST be rejected. The procedure halts.</t>
          <t>If a route with DO community set is received from Peer and DO value isn't equal to neighbor ASN - it's a route leak and MUST be rejected. The procedure halts.</t>
          <t>If a route is received from Provider, Peer or RS the DO community MUST be added with value equal to global administrator ID of the neighbor (sender).</t>
        </list>
      </t>

      <t>
        The egress policy MUST follow next procedure:
        <list style="numbers">
          <t>A route with DO community set MUST not be sent to providers, peers and RS.</t>
          <t>If route is sent to customer or peer DO community MUST be added with value equal to global administrator ID of the sender.</t>
        </list>
      </t>

      <t>
        These rules provide support for both route leak prevention and detection.
      </t>
    </section>

    <section title="Implementation Considerations">
      <t>
        It was observed that the majority of BGP implementations doesn't support negative match for communities like a:b:!c.
        In this case it is suggested to replace second rule from ingress policy with next one:
      </t>
      <t>
        If a route with DO community set is received from Peer and DO value is equal to neighbor ASN - it's a valid route, otherwise it is a route leak. The procedure halts.
      </t>
      <t>
        This rule is based on a weaker assumption that a peer that is doing marking is also doing filtering.
        But in return, such rule can be easily implemented with two consecutive matching rules.
      </t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        In specific circumstances at the state of partial adoption, route leak detection mechanism can result in DoS for the victim prefix.
        Such a scenario may happen only for prefixes that have a single path from the originator to Tier1 and which is not covered with less specific prefixes with multiple paths to Tier1.
        If, in such unreliable topology, route leak is injected inside this single path it may be rejected by upper providers, thus limiting prefix visibility.
        While such anomaly is unlikely to happen, such an issue should be easy to debug, since it directly affects the sequence of originator's providers.
      </t>

      <t>
        With the use of BGP community, there is often a concern that the community propagates beyond its intended perimeter and causes harm <xref target="streibelt"></xref>.
        However, that concern does not apply to the DO community because it is a transitive community that must propagate as far as the update goes.
      </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>
        The draft suggests to reserve Global Administrator ID 4200000000 for transit well-known large community registry.
        IANA is requested to register DO community in the well-known large community <xref target="RFC8092"></xref> registry.
      </t>
    </section>
  </middle>

  <back>
    <references title="Informative References">
      &RFC7908;
      &RFC8092;

      &I-D.ietf-idr-bgp-open-policy;

      <reference anchor="streibelt" target="https://archive.psg.com//181101.imc-communities.pdf">
        <front>
          <title>BGP Communities: Even more Worms in the Routing Can</title>

        <author initials="F." surname="Streibelt et al.">
        <organization></organization>
        </author>

        <date month='October' year='2018' />
        </front>
        <seriesInfo name='' value='ACM IMC' />
      </reference>
    </references>

    <section title="Acknowledgements" numbered="no">
      <t>
        The authors wish to thank John Scudder, Susan Hares, Ruediger Volk, Mat Ford, Greg Skinner for their review and comments.
      </t>
    </section>

    <section title="Contributors" numbered="no">
      <t>
        The following people made significant contributions to this document and should be considered co-authors:
      </t>

      <figure><artwork><![CDATA[
Brian Dickson
Independent
Email: brian.peter.dickson@gmail.com

Doug Montgomery
USA National Institute of Standards and Technology
Email: dougm@nist.gov

Keyur Patel
Arrcus
Email: keyur@arrcus.com

Andrei Robachevsky
Internet Society
Email: robachevsky@isoc.org

Eugene Bogomazov
Qrator Labs
Email: eb@qrator.net

Randy Bush
Internet Initiative Japan
Email: randy@psg.com
      ]]></artwork></figure>
    </section>

  </back>
</rfc>


